name: main

# Define any environment vars we want to use throughout the build process
# Secret variables can be defined under the Github project's "Settings", which can be referrenced throughout this file as well
env:
  IMAGE_NAME: blockstack/gh-actions-test
  DOCKER_REGISTRY: quay.io

# Run on pushes and PRs to any branch
on:
  push:
    branches:
      - '**'
    tags-ignore:
      - '**'
    paths-ignore:
      - '**/CHANGELOG.md'
  pull_request:

jobs:
  build-publish:
    runs-on: ubuntu-latest
    steps:
      # Checkouts the branch/commit pertaining to the triggered job
      - uses: actions/checkout@v2
        with:
          token: ${{ secrets.GH_TOKEN }}

      # Notifies a Slack channel about this job starting
      # Only runs if the previous action was successful
      # - name: Notify slack start
      #   if: success()
      #   id: slack
      #   env:
      #     SLACK_BOT_TOKEN: ${{ secrets.SLACK_BOT_TOKEN }}
      #   uses: voxmedia/github-action-slack-notify-build@v1.1.2
      #   with:
      #     channel: devops-notify
      #     status: STARTING
      #     color: warning

      # Detects the branch being built. If master, will:
      #   * Tag and release a new semantic version
      #   * Generate release notes and post them in CHANGELOG.md and Slack
      #   * If building a Node project, publish your module
      - name: Semantic Release
        uses: cycjimmy/semantic-release-action@v2.5.0
        id: semantic
        env:
          GITHUB_TOKEN: ${{ secrets.GH_TOKEN }}
          SLACK_WEBHOOK: ${{ secrets.SLACK_WEBHOOK }}
          SEMANTIC_RELEASE_PACKAGE: gh-actions-test
        with:
          # These plugins aren't packaged with semantic-release by default. So specify them here to ensure they get installed during this GH Action
          extra_plugins: |
            @semantic-release/changelog
            @semantic-release/git
            semantic-release-slack-bot

      # Builds the Docker image, tags it with the new semantic version created from the previous action, and publishes it to a registry
      # - name: Build/Tag/Push Image
      #   uses: docker/build-push-action@v1
      #   with:
      #     repository: ${{ env.IMAGE_NAME }}
      #     username: ${{ secrets.QUAY_USERNAME }}
      #     password: ${{ secrets.QUAY_PASSWORD }}
      #     registry: ${{ env.DOCKER_REGISTRY }}
      #     tags: ${{ steps.semantic.outputs.new_release_version }}
      #     tag_with_ref: true
      #     add_git_labels: true
      #     # Set to true to push image
      #     push: ${{ github.ref != 'refs/heads/master' || steps.semantic.outputs.new_release_version != '' }}

      # # Updates the first Slack message into a SUCCESSful message
      # # Only runs if the previous actions were successful
      # - name: Notify slack success
      #   if: success()
      #   env:
      #     SLACK_BOT_TOKEN: ${{ secrets.SLACK_BOT_TOKEN }}
      #   uses: voxmedia/github-action-slack-notify-build@v1.1.2
      #   with:
      #     message_id: ${{ steps.slack.outputs.message_id }}
      #     channel: devops-notify
      #     status: SUCCESS
      #     color: good

      # # Updates the first Slack message into a FAILURE message
      # # Only runs if any of the previous actions failed
      # - name: Notify slack fail
      #   if: failure()
      #   env:
      #     SLACK_BOT_TOKEN: ${{ secrets.SLACK_BOT_TOKEN }}
      #   uses: voxmedia/github-action-slack-notify-build@v1.1.2
      #   with:
      #     message_id: ${{ steps.slack.outputs.message_id }}
      #     channel: devops-notify
      #     status: FAILED
      #     color: danger
